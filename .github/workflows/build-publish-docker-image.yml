name: Build and publish Docker image & update image version in argoCD repo

on:
  push:
    branches: [ main ]

env:
  IMAGE-NAME: maskinporten-onboarding-frontend
  NODE_ENV: production

jobs:
  build-publish-image:
    runs-on: ubuntu-latest
    outputs:
      imagetag: ${{ steps.output-image-tag.outputs.imagetag }}
      imagedigest: ${{ steps.output-image-digest.outputs.imagedigest }}
      imagename: ${{ steps.output-image-name.outputs.imagename }}

    steps:
      - name: Set imagetag as env variable
        run: echo "IMAGETAG=$(date +'%Y-%m-%d-%H%M')-${GITHUB_SHA::8}" >> "$GITHUB_ENV"

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Build image with Dockerfile
        run: docker build -t ${{secrets.REGISTRY_URL}}/${{env.IMAGE-NAME}}:${{env.IMAGETAG}} --build-arg="BUILD_VERSION=${{env.IMAGETAG}}" .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.REGISTRY_URL }}/${{env.IMAGE-NAME}}:${{env.IMAGETAG}}
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: "Login Azure docker container registery"
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: "Push image"
        run: |
          docker push ${{ secrets.REGISTRY_URL }}/${{env.IMAGE-NAME}}:${{env.IMAGETAG}}

      - run: |
          echo "IMAGE_DIGEST=$(docker inspect --format='{{.RepoDigests}}' ${{ secrets.REGISTRY_URL }}/${{env.IMAGE-NAME}}:${{env.IMAGETAG}}|cut -d '@' -f 2|cut -d ']' -f 1)" >> "$GITHUB_ENV"

      - id: output-image-tag
        run: echo "imagetag=${{env.IMAGETAG}}" >> "$GITHUB_OUTPUT"

      - id: output-image-digest
        run: echo "imagedigest=${{env.IMAGE_DIGEST}}" >> "$GITHUB_OUTPUT"

      - id: output-image-name
        run: echo "imagename=${{env.IMAGE-NAME}}" >> "$GITHUB_OUTPUT"

  call-update-image:
    uses: felleslosninger/github-workflows/.github/workflows/ci-call-update-image.yml@main
    needs: build-publish-image
    with:
      application-name: maskinporten-onboarding-frontend
      deployment-environment: systest
      image-digest: ${{ needs.build-publish-image.outputs.imagedigest }}
      image-name: maskinporten-onboarding-frontend
      image-version: ${{ needs.build-publish-image.outputs.imagetag }}
      kubernetes-repo: kundetjenester-cd-external
      product-name: onboarding
    secrets: inherit